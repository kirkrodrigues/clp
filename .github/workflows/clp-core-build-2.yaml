name: "clp-core-build-2"

on:
  pull_request:
    paths:
      - ".github/actions/**"
      - ".github/workflows/clp-core-build-2.yaml"
      - "components/core/**"
      - "!components/core/tools/scripts/lib_install/macos-12/**"
  push:
    paths:
      - ".github/actions/**"
      - ".github/workflows/clp-core-build-2.yaml"
      - "components/core/**"
      - "!components/core/tools/scripts/lib_install/macos-12/**"
  workflow_dispatch:

env:
  # Consider changes between the current commit and `main`
  # NOTE: If a pull request changes the image, then we need to build the image and then build
  # CLP using the changed image; otherwise we can build CLP using the published image. So when
  # determining what files have changed, we use `main` rather than the previous commit to ensure
  # that on every push to the PR, we can detect if the image was changed and use it to build
  # and test CLP.
  PATHS_FILTER_BASE: "main"
  PATHS_FILTER_LIB_INSTALL_GLOB: "components/core/tools/scripts/lib_install/*.sh"
  PATHS_FILTER_CLP_FILTER: |
    clp:
      - ".github/actions/**"
      - ".github/workflows/clp-core-build.yaml"
      - ".gitmodules"
      - "components/core/cmake/**"
      - "components/core/CMakeLists.txt"
      - "components/core/src/**"
      - "components/core/tests/**"
      - "components/core/tools/scripts/deps-download/**"
      - "components/core/tools/scripts/utils/build-and-run-unit-tests.sh"

# Currency group to prevent multiple workflow instances from trying to publish container images
concurrency: "${{github.workflow}}-${{github.ref}}"

jobs:
  ubuntu-jammy:
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v3"
        with:
          submodules: "recursive"

      - name: "Work around actions/runner-images/issues/6775"
        run: "chown $(id -u):$(id -g) -R ."
        shell: "bash"

      - name: "Filter relevant changes"
        uses: "dorny/paths-filter@v2"
        id: "filter"
        with:
          base: "${{env.PATHS_FILTER_BASE}}"
          filters: |
            image:
              - ".github/actions/**"
              - ".github/workflows/clp-core-build.yaml"
              - ${{env.PATHS_FILTER_LIB_INSTALL_GLOB}}
              - "components/core/tools/docker-images/clp-env-base-${{env.OS_NAME}}/**"
              - "components/core/tools/scripts/lib_install/${{env.OS_NAME}}/**"
            ${{inputs.PATHS_FILTER_CLP_FILTER}}


      - uses: "docker/setup-buildx-action@v3"
        with:
          driver-opts: "network=host"

      - id: "get_deps_image_props"
        shell: "bash"
        run: |
          if [[ "${{inputs.push_deps_image}}" == "true" ]] ; then
            echo "BRANCH=${{github.ref_name}}" >> "$GITHUB_OUTPUT"
          else
            echo "BRANCH=latest" >> "$GITHUB_OUTPUT"
          fi

      - id: "deps_image_meta"
        uses: "docker/metadata-action@v5"
        with:
          images: "clp-core-dependencies-x86-ubuntu-jammy"
          tags: |
            type=raw,value=${{steps.get_deps_image_props.outputs.BRANCH}}

      - uses: "docker/build-push-action@v5"
        with:
          context: "components/core"
          file: "components/core/tools/docker-images/clp-env-base-ubuntu-focal/Dockerfile"
          labels: "${{steps.deps_image_meta.outputs.labels}}"
          tags: "${{steps.deps_image_meta.outputs.tags}}"
          outputs: "type=docker,dest=/tmp/myimage.tar"

      - uses: "actions/upload-artifact@v3"
        with:
          name: "clp-core-dependencies-x86-ubuntu-jammy"
          path: "/tmp/myimage.tar"

  ubuntu-jammy-core-build:
    needs: "ubuntu-jammy"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v3"
        with:
          submodules: "recursive"

      - name: "Work around actions/runner-images/issues/6775"
        run: "chown $(id -u):$(id -g) -R ."
        shell: "bash"

      - shell: "bash"
        working-directory: "./components/core"
        run: "./tools/scripts/deps-download/download-all.sh"

      - uses: "actions/download-artifact@v3"
        with:
          name: "clp-core-dependencies-x86-ubuntu-jammy"
          path: "/tmp"

      - name: "Load image"
        run: |-
          docker load --input /tmp/myimage.tar
          docker image ls -a

      - shell: "bash"
        run: >-
          docker run
          --user $(id -u):$(id -g)
          --volume "$GITHUB_WORKSPACE/components/core":/mnt/clp
          --workdir /mnt/clp
          clp-core-dependencies-x86-ubuntu-jammy:actions2jobs
          /mnt/clp/tools/scripts/utils/build-and-run-unit-tests.sh . build
