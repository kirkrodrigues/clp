name: clp-core-build

on:
  push:
    paths:
      # TODO
      - '.github/workflows/clp-core-build-2.yaml'
      - 'components/core/**'
      - '!components/core/tools/scripts/lib_install/macos-12/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BASE: ${{github.repository}}/clp-core-x86
  
  CORE_COMPONENT_PATHS_FILTER: |
    clp:
      - ".gitmodules"
      - "components/core/cmake/**"
      - "components/core/CMakeLists.txt"
      - "components/core/src/**"
      - "components/core/tests/**"
  
  CORE_COMPONENT_DIR: "components/core"
  CORE_COMPONENT_DOCKER_IMGS_DIR: "components/core/tools/docker-images"
  CORE_COMPONENT_LIB_INSTALL_DIR: "components/core/tools/scripts/lib_install"
  WORKFLOWS_DIR: ".github/workflows"

concurrency: ${{github.workflow}}-${{github.ref}}

jobs:
  ubuntu-focal:
    runs-on: ubuntu-latest
    # TODO
#    container: 
#      image: ghcr.io/y-scope/clp/clp-core-dependencies-x86-ubuntu-focal:main
#      volumes:
#        - ${{github.workspace}}/build:/output
    services:
      registry:
        image: registry:2
        ports: [5000:5000]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
            submodules: recursive

      - name: Workaround actions/runner-images/issues/6775
        run: chown $(id -u):$(id -g) -R .

      - name: Filter relevant changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          # Consider changes between the previous commit and this one
          base: ${{github.ref_name}}
          filters: |
            image:
              - "${{env.CORE_COMPONENT_DOCKER_IMGS_DIR}}/clp-env-base-focal/**"
              - "${{env.CORE_COMPONENT_LIB_INSTALL_DIR}}/*.sh"
              - "${{env.CORE_COMPONENT_LIB_INSTALL_DIR}}/ubuntu-focal/**"
              - "${{env.WORKFLOWS_DIR}}/clp-core-build.yaml"
            ${{env.CORE_COMPONENT_PATHS_FILTER}}

      - if: steps.filter.outputs.image == "true"
        uses: ./.github/actions/clp-docker-build-push-2
        with:
          build_dir_name: ubuntu-focal
          image_name: ${{env.IMAGE_NAME_BASE}}-ubuntu-focal
          context: ${{env.CORE_COMPONENT_DIR}}
          file: ${{env.CORE_COMPONENT_DOCKER_IMGS_DIR}}/clp-env-base-focal/Dockerfile
          push_image: ${{"pull_request" != github.event_name && "refs/heads/main" == github.ref}}
          token: ${{secrets.GITHUB_TOKEN}}
