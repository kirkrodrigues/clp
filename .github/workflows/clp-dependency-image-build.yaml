name: generate-build-dependency-image

on:
  push:
    paths:
      - '.github/workflows/clp-dependency-image-build.yaml'
      - 'components/core/tools/docker-images/**'
      - 'components/core/tools/scripts/lib_install/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BASE: ${{github.repository}}/clp-core-dependencies-x86
  
  CORE_COMPONENT_DIR: 'components/core'
  CORE_COMPONENT_DOCKER_IMGS_DIR: 'components/core/tools/docker-images'
  CORE_COMPONENT_LIB_INSTALL_DIR: 'components/core/tools/scripts/lib_install'
  WORKFLOWS_DIR: '.github/workflows'

concurrency: build-${{github.ref}}

jobs:
  build-ubuntu-focal:
    runs-on: ubuntu-20.04
    name: Build Image - Ubuntu Focal
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
            submodules: recursive

      - name: Workaround actions/runner-images/issues/6775
        run: chown $(id -u):$(id -g) -R .

      - name: Filter relevant changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          # Consider changes between the previous commit and this one
          base: ${{ github.ref_name }}
          filters: |
            src:
              - '${{env.CORE_COMPONENT_DOCKER_IMGS_DIR}}/clp-env-base-focal/**'
              - '${{env.CORE_COMPONENT_LIB_INSTALL_DIR}}/*.sh'
              - '${{env.CORE_COMPONENT_LIB_INSTALL_DIR}}/ubuntu-focal/**'
              - '${{env.WORKFLOWS_DIR}}/clp-dependency-image-build.yaml'
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          # TODO: Is this because the service must run on the host? I.e., we
          # can't have a docker registry inside a container?
          driver-opts: network=host

      - name: Build and push to local registry
        uses: docker/build-push-action@v5
        if: steps.filter.outputs.src == 'true'
        with:
          context: ${{env.CORE_COMPONENT_DIR}}
          file: ${{env.CORE_COMPONENT_DOCKER_IMGS_DIR}}/clp-env-base-focal/Dockerfile
          push: true
          tags: localhost:5000/${{env.IMAGE_NAME_BASE}}-ubuntu-focal:latest

      - name: Build clp
        if: steps.filter.outputs.src == 'true'
        run: |
          components/core/tools/scripts/deps-download/download-all.sh
          docker run -u$(id -u):$(id -g) --rm -v"$GITHUB_WORKSPACE":/mnt/clp --workdir /mnt/clp localhost:5000/$IMAGE_NAME_BASE-ubuntu-focal:latest /mnt/clp/.github/actions/clp-core-build-2/focal-build.sh

  build-ubuntu-bionic:
    runs-on: ubuntu-20.04
    name: Build Image - Ubuntu Bionic
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
            submodules: recursive

      - name: Workaround actions/runner-images/issues/6775
        run: chown $(id -u):$(id -g) -R .

      - name: Filter relevant changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          # Consider changes between the previous commit and this one
          base: ${{ github.ref_name }}
          filters: |
            src:
              - '${{env.CORE_COMPONENT_DOCKER_IMGS_DIR}}/clp-env-base-bionic/**'
              - '${{env.CORE_COMPONENT_LIB_INSTALL_DIR}}/*.sh'
              - '${{env.CORE_COMPONENT_LIB_INSTALL_DIR}}/ubuntu-bionic/**'
              - '${{env.WORKFLOWS_DIR}}/clp-dependency-image-build.yaml'

      - name: Build and Push Ubuntu Bionic Docker Image
        uses: ./.github/actions/clp-docker-build-push-action
        if: steps.filter.outputs.src == 'true'
        with:
          image_name: ${{env.IMAGE_NAME_BASE}}-ubuntu-bionic
          context: ${{env.CORE_COMPONENT_DIR}}
          file: ${{env.CORE_COMPONENT_DOCKER_IMGS_DIR}}/clp-env-base-bionic/Dockerfile
          token: ${{secrets.GITHUB_TOKEN}}
          push_image: ${{'pull_request' != github.event_name && 'refs/heads/main' == github.ref}}

  build-centos:
    runs-on: ubuntu-20.04
    name: Build Image - CentOS 7.4
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
            submodules: recursive

      - name: Workaround actions/runner-images/issues/6775
        run: chown $(id -u):$(id -g) -R .

      - name: Filter relevant changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          # Consider changes between the previous commit and this one
          base: ${{ github.ref_name }}
          filters: |
            src:
              - '${{env.CORE_COMPONENT_DOCKER_IMGS_DIR}}/clp-env-base-centos7.4/**'
              - '${{env.CORE_COMPONENT_LIB_INSTALL_DIR}}/*.sh'
              - '${{env.CORE_COMPONENT_LIB_INSTALL_DIR}}/centos7.4/**'
              - '${{env.WORKFLOWS_DIR}}/clp-dependency-image-build.yaml'

      - name: Build and Push Centos7.4 Docker Image
        uses: ./.github/actions/clp-docker-build-push-action
        if: steps.filter.outputs.src == 'true'
        with:
          image_name: ${{env.IMAGE_NAME_BASE}}-centos7.4
          context: ${{env.CORE_COMPONENT_DIR}}
          file: ${{env.CORE_COMPONENT_DOCKER_IMGS_DIR}}/clp-env-base-centos7.4/Dockerfile
          token: ${{secrets.GITHUB_TOKEN}}
          push_image: ${{'pull_request' != github.event_name && 'refs/heads/main' == github.ref}}
