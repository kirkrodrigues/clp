version: "3"

vars:
  CLP_BUILD_DIR: "{{.USER_WORKING_DIR}}/out"
  PYTHON_VERSION:
    sh: python3 -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')"

tasks:
  default:
    deps: [ package ]

  clean:
    cmds:
      - rm -rf {{.CLP_BUILD_DIR}}

  clean_package:
    cmds:
      - rm -rf {{.CLP_BUILD_DIR}}/clp-package

  # TODO Clean-up
  package:
    deps:
      - core
      - task: python_component
        vars:
          COMPONENT: clp-py-utils
      - task: python_component
        vars:
          COMPONENT: compression-job-handler
      - task: python_component
        vars:
          COMPONENT: job-orchestration
      - webui
    vars:
      PACKAGE_BUILD_DIR: "{{.CLP_BUILD_DIR}}/clp-package"
    cmds:
      - mkdir -p {{.PACKAGE_BUILD_DIR}}
      - rsync -a components/package-template/src/ {{.PACKAGE_BUILD_DIR}}
      - mkdir -p {{.PACKAGE_BUILD_DIR}}/lib/python3/site-packages
      - pip3 install -U components/clp-py-utils/dist/*.whl components/compression-job-handler/dist/*.whl components/job-orchestration/dist/*.whl -t {{.PACKAGE_BUILD_DIR}}/lib/python3/site-packages
      - mkdir -p {{.PACKAGE_BUILD_DIR}}/bin
      - rsync -a {{.CLP_BUILD_DIR}}/core/clg {{.CLP_BUILD_DIR}}/core/clp {{.CLP_BUILD_DIR}}/core/clo {{.PACKAGE_BUILD_DIR}}/bin/.
      - rsync -a {{.CLP_BUILD_DIR}}/nodejs/node/bin/node {{.PACKAGE_BUILD_DIR}}/bin/.
      - mkdir -p {{.PACKAGE_BUILD_DIR}}/var/www/
      - rsync -a --delete {{.CLP_BUILD_DIR}}/webui/built/ {{.PACKAGE_BUILD_DIR}}/var/www/
    sources:
      - "components/clp-py-utils/dist/*.whl"
      - "components/compression-job-handler/dist/*.whl"
      - "components/job-orchestration/dist/*.whl"
      - "{{.CLP_BUILD_DIR}}/core/clg"
      - "{{.CLP_BUILD_DIR}}/core/clp"
      - "{{.CLP_BUILD_DIR}}/core/clo"
      - "{{.CLP_BUILD_DIR}}/webui/built/**/*"
    generates:
      - "{{.CLP_BUILD_DIR}}/clp-package/bin/clg"
      - "{{.CLP_BUILD_DIR}}/clp-package/bin/clp"
      - "{{.CLP_BUILD_DIR}}/clp-package/bin/clo"
      - "{{.CLP_BUILD_DIR}}/clp-package/bin/node"
      - "{{.CLP_BUILD_DIR}}/clp-package/var/www/**/*"
  
  webui:
    deps: [ webui_bundle ]
    vars:
      BUNDLE_DIR: "{{.CLP_BUILD_DIR}}/webui/bundle"
      BUILD_DIR: "{{.CLP_BUILD_DIR}}/webui/built"
      NODEJS_BIN_DIR: "{{.CLP_BUILD_DIR}}/nodejs/node/bin/"
    cmds:
      - mkdir -p {{.BUILD_DIR}}
      - rsync -a --delete {{.BUNDLE_DIR}}/ {{.BUILD_DIR}}/
      - |-
        cd {{.BUILD_DIR}}/programs/server
        PATH={{.NODEJS_BIN_DIR}}:$PATH $(readlink -f {{.NODEJS_BIN_DIR}}/npm) install
    sources:
      - "{{.BUNDLE_DIR}}/**/*"
    generates:
      - "{{.BUILD_DIR}}/**/*"
  
  webui_bundle:
    deps: [ nodejs ]
    dir: "components/webui"
    vars:
      BUILD_DIR: "{{.CLP_BUILD_DIR}}/webui"
    cmds:
      - mkdir -p {{.BUILD_DIR}}
      - meteor npm install --production
      - rm -rf {{.BUILD_DIR}}/bundle
      - meteor build --directory {{.BUILD_DIR}}
    sources:
      - "./.meteor/*"
      - "./client/**/*"
      - "./imports/**/*"
      - "./server/**/*"
      - "./tests/**/*"
      - "./*"
    generates:
      - "{{.BUILD_DIR}}/bundle/**/*"
  
  nodejs:
    vars:
      BUILD_DIR: "{{.CLP_BUILD_DIR}}/nodejs"
      NODEJS_VERSION: "14.21.3"
      NODEJS_RELEASE: "v{{.NODEJS_VERSION}}-linux-x64"
      TAR_FILENAME: "node-{{.NODEJS_RELEASE}}.tar.xz"
    cmds:
      - mkdir -p {{.BUILD_DIR}}
      - curl -fsSL https://nodejs.org/dist/v{{.NODEJS_VERSION}}/{{.TAR_FILENAME}} -o {{.BUILD_DIR}}/{{.TAR_FILENAME}}
      - tar xf {{.BUILD_DIR}}/{{.TAR_FILENAME}} -C {{.BUILD_DIR}}
      - mv {{.BUILD_DIR}}/node-{{.NODEJS_RELEASE}} {{.BUILD_DIR}}/node
    sources:
      - "{{.BUILD_DIR}}/{{.TAR_FILENAME}}"
    generates:
      - "{{.BUILD_DIR}}/node/bin/node"

  core:
    deps: [ core_submodules ]
    vars:
      SRC_DIR: "components/core"
      BUILD_DIR: "{{.CLP_BUILD_DIR}}/core"
    cmds:
      - mkdir -p {{.BUILD_DIR}}
      - cmake -S {{.SRC_DIR}} -B {{.BUILD_DIR}}
      - cmake --build {{.BUILD_DIR}} --parallel --target clg clp clo
    sources:
      - "{{.SRC_DIR}}/cmake/**/*"
      - "{{.SRC_DIR}}/src/**/*"
      - "{{.SRC_DIR}}/submodules/**/*"
      - "{{.SRC_DIR}}/CMakeLists.txt"
    generates:
      - "{{.BUILD_DIR}}/clg"
      - "{{.BUILD_DIR}}/clp"
      - "{{.BUILD_DIR}}/clo"

  core_submodules:
    vars:
      SRC_DIR: "components/core"
    cmds:
      - "{{.SRC_DIR}}/tools/scripts/deps-download/download-all.sh"
    sources:
      - "{{.SRC_DIR}}/tools/script/deps-download/**/*"
    generates:
      - "{{.SRC_DIR}}/submodules/**/*"

  python_component:
    label: "{{.COMPONENT}}"
    deps:
      - task: component_venv
        vars:
          COMPONENT: "{{.COMPONENT}}"
    vars:
      PACKAGE:
        sh: echo {{.COMPONENT}} | tr - _
      VENV_DIR: "{{.CLP_BUILD_DIR}}/{{.COMPONENT}}/venv"
    dir: "components/{{.COMPONENT}}"
    cmds:
      - |-
        . {{.VENV_DIR}}/bin/activate
        poetry build --format wheel
    sources:
      - "{{.PACKAGE}}/**/*"
      - pyproject.toml
    generates:
      - "dist/*.whl"

  component_venv:
    label: "{{.COMPONENT}}_venv"
    dir: "components/{{.COMPONENT}}"
    vars:
      VENV_DIR: "{{.CLP_BUILD_DIR}}/{{.COMPONENT}}/venv"
    cmds:
      - python3 -m venv {{.VENV_DIR}}
      - |-
        . {{.VENV_DIR}}/bin/activate
        pip3 install -U -r {{.USER_WORKING_DIR}}/requirements.txt
        poetry update
    sources:
      - "{{.USER_WORKING_DIR}}/requirements.txt"
      - pyproject.toml
    generates:
      # For performance, we only mark a subset of all files in the venv as
      # generated
      - "{{.VENV_DIR}}/lib/python{{.PYTHON_VERSION}}/site-packages/*.dist-info/*"
